/*==========================================================================================
ヘッダファイル説明:
	FPSを計測し、特定なフレームレートでループするクラスのヘッダ
==========================================================================================*/
#ifndef FPS_H_
#define FPS_H_

/*==========================================================================================
	インクルードヘッダ
==========================================================================================*/
#define DEFAULT_FRAME_RATE (60)		//デフォルトのフレームレート

/*==========================================================================================
	クラス定義
==========================================================================================*/
class FPS
{
public:
	FPS();
	FPS(int FrameRate = DEFAULT_FRAME_RATE);	//フレームレートを指定できるコンストラクター
	~FPS() {}

	void AddCount(void) { m_Count++; }				//カウンターの蓄積

	void Update(const int& TookTime);	//更新処理
	void Draw(void);					//描画処理

	//セッター
	void SetFrameRate(int FrameRate);

	//ゲッター
	float GetFrameRateNow(void) const { return m_FrameRateNow; }		//現在のフレームレート取得
	int GetSetFrameRate(void) const { return m_SetFrameRate; }		//設定したフレームレート取得
private:
	float m_FrameRateNow;	//今のフレームレート
	int m_SetFrameRate;		//設定されたフレームレート
	int m_TookTime;			//蓄積した時間
	int m_Count;			//カウント
};

#endif